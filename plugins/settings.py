#!/usr/bin/python3

import plugins
from PyQt5.QtWidgets import (QWidget, QVBoxLayout, QLabel, QGroupBox, 
                            QGridLayout, QScrollArea, QCheckBox, 
                            QComboBox, QPushButton)
from PyQt5.QtGui import QStandardItem, QIcon
from PyQt5.QtCore import Qt, QSize
import json
import os
import subprocess

class SettingsWidget(QWidget):
    def __init__(self):
        super().__init__()
        self.current_language = 'ru'
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∏–¥–∂–µ—Ç—ã
        self.init_widgets()
        self.initUI()
        
    def init_widgets(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –≤–∏–¥–∂–µ—Ç–æ–≤"""
        # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.darkModeCheck = QCheckBox()
        self.languageCombo = QComboBox()
        self.languageCombo.addItems(['–†—É—Å—Å–∫–∏–π', 'English'])
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        self.autoUpdateCheck = QCheckBox()
        self.updateFreqCombo = QComboBox()
        update_frequencies = {
            'ru': ['–ï–∂–µ–¥–Ω–µ–≤–Ω–æ', '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ', '–ï–∂–µ–º–µ—Å—è—á–Ω–æ'],
            'en': ['Daily', 'Weekly', 'Monthly']
        }
        self.updateFreqCombo.addItems(update_frequencies[self.current_language])
        
        self.notifyUpdatesCheck = QCheckBox()
        
        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        button_text = "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏" if self.current_language == 'ru' else "Save Settings"
        self.saveButton = QPushButton(f"üíæ {button_text}")
        self.saveButton.clicked.connect(self.saveSettings)
        
    def initUI(self):
        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout = QVBoxLayout()
        
        # –°–æ–∑–¥–∞–µ–º –æ–±–ª–∞—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        scroll = QScrollArea()
        scroll.setWidgetResizable(True)
        scroll.setFrameShape(QScrollArea.NoFrame)
        
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        container = QWidget()
        layout = QVBoxLayout(container)
        layout.setSpacing(20)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≥—Ä—É–ø–ø
        group_titles = {
            'en': {
                'general': "General Settings",
                'updates': "Updates",
                'launch': "Advanced Settings"
            },
            'ru': {
                'general': "–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
                'updates': "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è",
                'launch': "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
            }
        }
        
        # –ì—Ä—É–ø–ø–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        general = QGroupBox(group_titles[self.current_language]['general'])
        general_grid = QGridLayout()
        general_grid.setSpacing(10)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–∫–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        labels = {
            'en': {
                'dark_mode': "üåô Dark Theme",
                'language': "üåê Language",
                'auto_update': "üîÑ Enable Auto-update",
                'update_freq': "‚è∞ Update Frequency",
                'notify': "üîî Notify About Updates"
            },
            'ru': {
                'dark_mode': "üåô –¢—ë–º–Ω–∞—è —Ç–µ–º–∞",
                'language': "üåê –Ø–∑—ã–∫",
                'auto_update': "üîÑ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ",
                'update_freq': "‚è∞ –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π",
                'notify': "üîî –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö"
            }
        }
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ general_grid
        general_grid.addWidget(QLabel(labels[self.current_language]['dark_mode']), 0, 0)
        general_grid.addWidget(self.darkModeCheck, 0, 1)
        general_grid.addWidget(QLabel(labels[self.current_language]['language']), 1, 0)
        general_grid.addWidget(self.languageCombo, 1, 1)
        
        general.setLayout(general_grid)
        
        # –ì—Ä—É–ø–ø–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        updates = QGroupBox(group_titles[self.current_language]['updates'])
        updates_grid = QGridLayout()
        updates_grid.setSpacing(10)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ updates_grid
        updates_grid.addWidget(QLabel(labels[self.current_language]['auto_update']), 0, 0)
        updates_grid.addWidget(self.autoUpdateCheck, 0, 1)
        updates_grid.addWidget(QLabel(labels[self.current_language]['update_freq']), 1, 0)
        updates_grid.addWidget(self.updateFreqCombo, 1, 1)
        updates_grid.addWidget(QLabel(labels[self.current_language]['notify']), 2, 0)
        updates_grid.addWidget(self.notifyUpdatesCheck, 2, 1)
        
        updates.setLayout(updates_grid)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∑–∞–ø—É—Å–∫–∞
        launch = QGroupBox(group_titles[self.current_language]['launch'])
        launch_grid = QGridLayout()
        launch_grid.setSpacing(10)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞
        apps = {
            'ru': [
                {
                    'icon': 'center.png',
                    'name': '–¶–µ–Ω—Ç—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π',
                    'command': 'acc',
                    'tooltip': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á—ë—Ç–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏, —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∂—É—Ä–Ω–∞–ª—ã, –æ–±–Ω–æ–≤–ª–Ω–µ–Ω–∏–µ —è–¥—Ä–∞.'
                },
                {
                    'icon': 'system.png',
                    'name': '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã',
                    'command': 'systemsettings5',
                    'tooltip': '–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏–µ, —Å–µ—Ç—å, –¥–∞—Ç–∞, –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–π —Å—Ä–µ–¥—ã.'
                },
                {
                    'icon': 'info.png',
                    'name': '–û —Å–∏—Å—Ç–µ–º–µ',
                    'command': 'kinfocenter',
                    'tooltip': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.'
                },
                {
                    'icon': 'preferences-desktop-display',  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–∫–æ–Ω–∫—É
                    'name': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Ä–∞–Ω–∞',
                    'command': 'kcmshell5 kcm_kscreen',
                    'tooltip': '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —ç–∫—Ä–∞–Ω–∞.'
                }
            ],
            'en': [
                {
                    'icon': 'center.png',
                    'name': 'System Control Center',
                    'command': 'acc',
                    'tooltip': 'User account management, system logs, kernel updates.'
                },
                {
                    'icon': 'system.png',
                    'name': 'System Settings',
                    'command': 'systemsettings5',
                    'tooltip': 'General settings: power management, network, date, workspace behavior.'
                },
                {
                    'icon': 'info.png',
                    'name': 'About System',
                    'command': 'kinfocenter',
                    'tooltip': 'Information about installed system.'
                },
                {
                    'icon': 'preferences-desktop-display',
                    'name': 'Display Settings',
                    'command': 'kcmshell5 kcm_kscreen',
                    'tooltip': 'Change display settings.'
                }
            ]
        }

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        for i, app in enumerate(apps[self.current_language]):
            button = QPushButton()
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∫–æ–Ω–∫—É
            if app['icon'].endswith('.png'):
                icon_path = os.path.join('res', app['icon'])
                if os.path.exists(icon_path):
                    button.setIcon(QIcon(icon_path))
            else:
                button.setIcon(QIcon.fromTheme(app['icon']))
            
            button.setIconSize(QSize(32, 32))
            button.setText(app['name'])
            button.setToolTip(app['tooltip'])
            button.clicked.connect(lambda checked, cmd=app['command']: self.launch_app(cmd))
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏
            button.setStyleSheet("""
                QPushButton {
                    text-align: left;
                    padding: 5px 10px;
                    border: 1px solid #2C2C2C;
                    border-radius: 4px;
                    min-width: 200px;
                    min-height: 40px;
                    color: white;  /* –ë–µ–ª—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ */
                    background-color: #3D3D3D;  /* –¢—ë–º–Ω–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω */
                }
                QPushButton:hover {
                    background-color: #4D4D4D;  /* –ß—É—Ç—å —Å–≤–µ—Ç–ª–µ–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */
                    color: white;
                    border: 1px solid #2C2C2C;
                }
                QPushButton:pressed {
                    background-color: #2196F3;  /* –°–∏–Ω–∏–π –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ */
                    color: white;
                    border: 1px solid #1976D2;
                }
            """)
            
            launch_grid.addWidget(button, i // 2, i % 2)

        launch.setLayout(launch_grid)
        
        # –ü—Ä–∏–º–µ–Ω–µ–º —Å—Ç–∏–ª–∏
        style = """
            QGroupBox {
                font-weight: bold;
                border: 2px solid #CCCCCC;
                border-radius: 6px;
                margin-top: 6px;
                padding-top: 10px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 3px;
            }
            QPushButton {
                text-align: left;
                padding: 5px 10px;
                border: 1px solid #2C2C2C;
                border-radius: 4px;
                color: white;
                background-color: #3D3D3D;
            }
            QPushButton:hover {
                background-color: #4D4D4D;
                border: 1px solid #2C2C2C;
            }
            QPushButton:checked {
                background-color: #2196F3;  /* –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Å–∏–Ω–∏–π —Ü–≤–µ—Ç –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ */
                border: 1px solid #1976D2;
            }
            QPushButton:pressed {
                background-color: #2196F3;
                border: 1px solid #1976D2;
            }
        """
        
        general.setStyleSheet(style)
        updates.setStyleSheet(style)
        launch.setStyleSheet(style)
        self.saveButton.setStyleSheet(style)
        self.saveButton.setObjectName("saveButton")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—ã –≤ layout
        layout.addWidget(general)
        layout.addWidget(updates)
        layout.addWidget(self.saveButton)
        layout.addStretch()
        layout.addWidget(launch)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –æ–±–ª–∞—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        scroll.setWidget(container)
        main_layout.addWidget(scroll)
        
        self.setLayout(main_layout)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.loadSettings()

    def loadSettings(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            if os.path.exists('settings.json'):
                with open('settings.json', 'r') as f:
                    settings = json.load(f)
                    self.darkModeCheck.setChecked(settings.get('dark_mode', False))
                    self.languageCombo.setCurrentText(settings.get('language', '–†—É—Å—Å–∫–∏–π'))
                    self.autoUpdateCheck.setChecked(settings.get('auto_update', True))
                    self.updateFreqCombo.setCurrentText(settings.get('update_frequency', '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ'))
                    self.notifyUpdatesCheck.setChecked(settings.get('notify_updates', True))
        except Exception as e:
            print(f"Error loading settings: {e}")

    def saveSettings(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ —Ñ–∞–π–ª"""
        try:
            settings = {
                'dark_mode': self.darkModeCheck.isChecked(),
                'language': self.languageCombo.currentText(),
                'auto_update': self.autoUpdateCheck.isChecked(),
                'update_frequency': self.updateFreqCombo.currentText(),
                'notify_updates': self.notifyUpdatesCheck.isChecked()
            }
            
            with open('settings.json', 'w') as f:
                json.dump(settings, f, indent=4)
        except Exception as e:
            print(f"Error saving settings: {e}")

    def update_language(self, language):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –∏—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.current_language = language
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        if self.layout():
            QWidget().setLayout(self.layout())
        self.init_widgets()
        self.initUI()

    def launch_app(self, command):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        try:
            subprocess.Popen(command.split())
        except Exception as e:
            print(f"Error launching application: {e}")

class PluginSettings(plugins.Base):
    def __init__(self):
        self.node = None
        self.settings_widget = None
        self.current_language = 'ru'

    def start(self, plist, pane):
        self.node = QStandardItem("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        plist.appendRow([self.node])

        self.settings_widget = SettingsWidget()
        index = pane.addWidget(self.settings_widget)

    def update_language(self, language):
        menu_titles = {
            'en': "Settings",
            'ru': "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
        }
        self.node.setText(menu_titles[language])
        if self.settings_widget:
            self.settings_widget.update_language(language)
